{
  "swagger": "2.0",
  "info": {
    "title": "Final Project API CSE 341",
    "description": "Final Project API for managing users and tickets",
    "version": "1.0.0"
  },
  "host": "cse-341-team13.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints for managing users"
    },
    {
      "name": "Tickets",
      "description": "Endpoints for managing tickets"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Fetches all users from the database",
        "responses": {
          "200": {
            "description": "A list of users"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Creates a new user in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User data"
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request - Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Fetches a user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user by ID",
        "description": "Updates an existing user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Updated user data"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request - Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user by ID",
        "description": "Deletes a user from the database by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tickets": {
      "get": {
        "tags": ["Tickets"],
        "summary": "Get all tickets",
        "description": "Fetches all tickets from the database",
        "responses": {
          "200": {
            "description": "A list of tickets"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Tickets"],
        "summary": "Create a new ticket",
        "description": "Creates a new ticket in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Ticket data"
          }
        ],
        "responses": {
          "201": {
            "description": "Ticket created successfully"
          },
          "400": {
            "description": "Bad request - Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": ["Tickets"],
        "summary": "Get ticket by ID",
        "description": "Fetches a ticket by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single ticket"
          },
          "404": {
            "description": "Ticket not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Tickets"],
        "summary": "Update a ticket by ID",
        "description": "Updates an existing ticket by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Updated ticket data"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket updated successfully"
          },
          "400": {
            "description": "Bad request - Invalid input"
          },
          "404": {
            "description": "Ticket not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Tickets"],
        "summary": "Delete a ticket by ID",
        "description": "Deletes a ticket from the database by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket deleted successfully"
          },
          "404": {
            "description": "Ticket not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
